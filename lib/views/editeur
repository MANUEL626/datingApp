import 'dart:io';

import 'package:flutter/material.dart';
import 'package:image_picker/image_picker.dart';
import 'package:image_cropper/image_cropper.dart';
import 'package:video_editor/video_editor.dart';
import 'package:audioplayers/audioplayers.dart';
import 'package:file_picker/file_picker.dart';

class PostPage extends StatefulWidget {
  const PostPage({Key? key}) : super(key: key);

  @override
  _PostPageState createState() => _PostPageState();
}

class _PostPageState extends State<PostPage> {
  XFile? _pickedImage;
  File? _pickedAudio; // Change this line
  final ImagePicker _picker = ImagePicker();

  Future<void> _pickImage() async {
    final XFile? pickedImage =
    await _picker.pickImage(source: ImageSource.gallery);
    if (pickedImage != null) {
      setState(() {
        _pickedImage = pickedImage;
      });
    }
  }

  Future<void> _cropImage() async {
    if (_pickedImage == null) return;
    final croppedImage = await ImageCropper.cropImage(
      sourcePath: _pickedImage!.path,
      aspectRatioPresets: [CropAspectRatioPreset.square],
      androidUiSettings: AndroidUiSettings(
        toolbarTitle: 'Rogner l\'image',
        toolbarColor: Colors.blue,
        toolbarWidgetColor: Colors.white,
        initAspectRatio: CropAspectRatioPreset.original,
        lockAspectRatio: false,
      ),
    );
    if (croppedImage != null) {
      setState(() {
        _pickedImage = croppedImage;
      });
    }
  }

  Future<void> _adjustVideoLength() async {
    if (_pickedImage == null || !_pickedImage!.path.endsWith('.mp4')) return;

    final videoEditorController = VideoEditorController.file(File(_pickedImage!.path))
      ..initialize().then((_) {
        final duration = videoEditorController.videoDuration! ~/ 2;
        videoEditorController.crop(start: Duration.zero, end: duration);
        videoEditorController.exportVideo(
          outputPath: 'adjusted_video.mp4',
          listener: (progress) {
            // Gérez la progression de l'exportation de la vidéo
          },
        );
      });
  }

  Future<void> _addSoundToImage() async {
    FilePickerResult? result =
    await FilePicker.platform.pickFiles(type: FileType.audio);

    if (result != null) {
      File file = File(result.files.single.path!);
      final duration = await _getAudioDuration(file);

      if (duration <= Duration(minutes: 1).inMilliseconds) { // Change this line
        setState(() {
          _pickedAudio = file;
        });
      } else {
        // Afficher un message indiquant que le son est trop long
      }
    }
  }

  Future<int> _getAudioDuration(File file) async {
    final player = AudioPlayer();
    final duration = await player.setUrl(file.path);
    return duration.inMilliseconds; // Change this line
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Post'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            ElevatedButton(
              onPressed: _pickImage,
              child: Text('Sélectionner une image/vidéo'),
            ),
            if (_pickedImage != null) ...[
              Image.file(File(_pickedImage!.path)), // Afficher l'image/vidéo sélectionnée
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: _cropImage,
                child: Text('Rogner l\'image'),
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: _pickedImage!.path.endsWith('.mp4') ? _adjustVideoLength : null,
                child: Text('Ajuster Longueur Vidéo'),
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: _addSoundToImage,
                child: Text('Ajouter Son à l\'Image'),
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () {
                  // Enregistrer le contenu édité
                },
                child: Text('Enregistrer'), // Add this line
              ),
            ],
          ],
        ),
      ),
    );
  }
}
